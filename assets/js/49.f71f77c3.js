(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{383:function(v,_,t){"use strict";t.r(_);var s=t(0),a=Object(s.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"进程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#进程"}},[v._v("#")]),v._v(" 进程")]),v._v(" "),_("p",[v._v("进程是操作系统中运行的一个程序的实例，是"),_("strong",[v._v("资源分配和管理的基本单位")]),v._v("。每个进程有自己独立的地址空间、数据、文件句柄等系统资源。")]),v._v(" "),_("p",[v._v("特点：")]),v._v(" "),_("ul",[_("li",[_("em",[v._v("独立性")]),v._v("：每个进程都有独立的地址空间，一个进程的崩溃不会影响其他进程")]),v._v(" "),_("li",[_("em",[v._v("开销大")]),v._v("：进程的创建、销毁和切换开销较大，因为需要分配和管理独立的资源")]),v._v(" "),_("li",[_("em",[v._v("通信复杂")]),v._v("：进程之间的通信需要通过进程通信（"),_("code",[v._v("IPC")]),v._v("）机制，如管道、消息队列、共享内存等，较为复杂")])]),v._v(" "),_("h2",{attrs:{id:"线程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#线程"}},[v._v("#")]),v._v(" 线程")]),v._v(" "),_("p",[v._v("线程是进程中的一个执行单元，是"),_("strong",[v._v("CPU调度的基本单位")]),v._v("。一个进程可以包含多个线程，它们共享进程的资源（如内存地址空间、文件句柄等）。")]),v._v(" "),_("p",[v._v("特点：")]),v._v(" "),_("ul",[_("li",[_("em",[v._v("共享资源")]),v._v("：同一进程内的多个线程共享进程资源，这使得线程之间的通信较为简单，但也带来了同步和互斥问题")]),v._v(" "),_("li",[_("em",[v._v("开销小")]),v._v("：线程的创建、销毁和切换开销相对较小，因为线程共享进程资源")]),v._v(" "),_("li",[_("em",[v._v("并发执行")]),v._v("：多线程可以在多核处理器上并发执行，提高程序的执行效率")])]),v._v(" "),_("h2",{attrs:{id:"协程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#协程"}},[v._v("#")]),v._v(" 协程")]),v._v(" "),_("p",[v._v("协程是一种比线程更加轻量级的执行单元，也称为用户态线程。协程通过程序自身的控制来实现调度，而不是依赖操作系统的内核调度。")]),v._v(" "),_("p",[v._v("特点：")]),v._v(" "),_("ul",[_("li",[_("em",[v._v("轻量级")]),v._v("：协程的创建和切换开销非常小，因为它们不需要操作系统的内核调度。")])])])}),[],!1,null,null,null);_.default=a.exports}}]);